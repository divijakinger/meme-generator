{"ast":null,"code":"var _jsxFileName = \"C:\\\\divija\\\\studies\\\\html-css\\\\React\\\\meme-generator\\\\src\\\\components\\\\Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport memedata from \"../memedata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [getMeme, setGetMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"\"\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState(memedata);\n\n  function getMemeImage() {\n    const memes_array = allMemeImages.data.memes;\n    const randomNum = Math.floor(Math.random() * memes_array.length);\n    const url = memes_array[randomNum].url;\n    setGetMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n    console.log(getMeme.randomImage);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-inputs\",\n        type: \"text\",\n        placeholder: \"Enter top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-inputs\",\n        type: \"text\",\n        placeholder: \"Enter bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: memeImage,\n      className: \"meme-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"3vIFPHh9J5tVJTu/3CZUODC+5Tg=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memedata","Meme","getMeme","setGetMeme","useState","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","getMemeImage","memes_array","data","memes","randomNum","Math","floor","random","length","url","prevMeme","console","log","memeImage"],"sources":["C:/divija/studies/html-css/React/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\r\nimport memedata from \"../memedata\";\r\n\r\nexport default function Meme(){\r\n    const [getMeme,setGetMeme] = React.useState({\r\n        topText : \"\",\r\n        bottomText:\"\",\r\n        randomImage:\"\"\r\n    });\r\n\r\n    const [allMemeImages,setAllMemeImages] = React.useState(memedata); \r\n    function getMemeImage(){\r\n        const memes_array = allMemeImages.data.memes;\r\n        const randomNum = Math.floor(Math.random()*memes_array.length);\r\n        const url = memes_array[randomNum].url;\r\n        setGetMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            randomImage : url,\r\n        }));\r\n\r\n        console.log(getMeme.randomImage);\r\n    }\r\n    return (\r\n        <main>\r\n            <div className=\"form\">\r\n                <input className=\"form-inputs\" type=\"text\" placeholder=\"Enter top text\"/>\r\n                <input className=\"form-inputs\" type=\"text\" placeholder=\"Enter bottom text\"/>\r\n                <button className=\"form-button\" onClick={getMemeImage}>Get a new meme image</button>\r\n            </div>\r\n            <img src={memeImage} className=\"meme-image\"/>\r\n        </main>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,eAAe,SAASC,IAAT,GAAe;EAAA;;EAC1B,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,KAAK,CAACK,QAAN,CAAe;IACxCC,OAAO,EAAG,EAD8B;IAExCC,UAAU,EAAC,EAF6B;IAGxCC,WAAW,EAAC;EAH4B,CAAf,CAA7B;EAMA,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCV,KAAK,CAACK,QAAN,CAAeJ,QAAf,CAAzC;;EACA,SAASU,YAAT,GAAuB;IACnB,MAAMC,WAAW,GAAGH,aAAa,CAACI,IAAd,CAAmBC,KAAvC;IACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcN,WAAW,CAACO,MAArC,CAAlB;IACA,MAAMC,GAAG,GAAGR,WAAW,CAACG,SAAD,CAAX,CAAuBK,GAAnC;IACAhB,UAAU,CAACiB,QAAQ,KAAK,EACpB,GAAGA,QADiB;MAEpBb,WAAW,EAAGY;IAFM,CAAL,CAAT,CAAV;IAKAE,OAAO,CAACC,GAAR,CAAYpB,OAAO,CAACK,WAApB;EACH;;EACD,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAO,SAAS,EAAC,aAAjB;QAA+B,IAAI,EAAC,MAApC;QAA2C,WAAW,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,SAAS,EAAC,aAAjB;QAA+B,IAAI,EAAC,MAApC;QAA2C,WAAW,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,SAAS,EAAC,aAAlB;QAAgC,OAAO,EAAEG,YAAzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAK,GAAG,EAAEa,SAAV;MAAqB,SAAS,EAAC;IAA/B;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GA7BuBtB,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}