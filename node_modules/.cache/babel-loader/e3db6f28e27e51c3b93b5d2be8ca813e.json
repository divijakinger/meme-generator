{"ast":null,"code":"var _jsxFileName = \"C:\\\\divija\\\\studies\\\\html-css\\\\React\\\\meme-generator\\\\src\\\\components\\\\Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport memedata from \"../memedata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [getMeme, setGetMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"\"\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMemeImages(data));\n  }, []);\n\n  function getMemeImage() {\n    const memes_array = allMemeImages.data.memes;\n    const randomNum = Math.floor(Math.random() * memes_array.length);\n    const url = memes_array[randomNum].url;\n    setGetMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n    console.log(getMeme.randomImage);\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setGetMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-inputs\",\n        type: \"text\",\n        placeholder: \"Enter top text\",\n        name: \"topText\",\n        value: getMeme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-inputs\",\n        type: \"text\",\n        placeholder: \"Enter bottom text\",\n        name: \"bottomText\",\n        value: getMeme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getMeme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: getMeme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: getMeme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"J65HczkXkmXSvN2mu6XcgHC/DQ8=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memedata","Meme","getMeme","setGetMeme","useState","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","useEffect","fetch","then","res","json","data","getMemeImage","memes_array","memes","randomNum","Math","floor","random","length","url","prevMeme","console","log","handleChange","event","name","value","target"],"sources":["C:/divija/studies/html-css/React/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\r\nimport memedata from \"../memedata\";\r\n\r\nexport default function Meme(){\r\n    const [getMeme,setGetMeme] = React.useState({\r\n        topText : \"\",\r\n        bottomText:\"\",\r\n        randomImage:\"\"\r\n    });\r\n\r\n    const [allMemeImages,setAllMemeImages] = React.useState([]);\r\n    \r\n    React.useEffect(()=>{\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(res => res.json())\r\n        .then(data => setAllMemeImages(data))\r\n    },[])\r\n    \r\n    function getMemeImage(){\r\n        const memes_array = allMemeImages.data.memes;\r\n        const randomNum = Math.floor(Math.random()*memes_array.length);\r\n        const url = memes_array[randomNum].url;\r\n        setGetMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            randomImage : url,\r\n        }));\r\n\r\n        console.log(getMeme.randomImage);\r\n    }\r\n\r\n    function handleChange(event){\r\n        const {name,value} = event.target;\r\n        setGetMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            [name]:value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"form\">\r\n                <input className=\"form-inputs\" type=\"text\" placeholder=\"Enter top text\" name=\"topText\" value={getMeme.topText} onChange={handleChange}/>\r\n                <input className=\"form-inputs\" type=\"text\" placeholder=\"Enter bottom text\" name=\"bottomText\" value={getMeme.bottomText} onChange={handleChange}/>\r\n                <button className=\"form-button\" onClick={getMemeImage}>Get a new meme image</button>\r\n            </div>\r\n            <div className=\"meme\">\r\n                <img src={getMeme.randomImage} className=\"meme--image\" />\r\n                <h2 className=\"meme--text top\">{getMeme.topText}</h2>\r\n                <h2 className=\"meme--text bottom\">{getMeme.bottomText}</h2>\r\n            </div>\r\n        </main>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,eAAe,SAASC,IAAT,GAAe;EAAA;;EAC1B,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,KAAK,CAACK,QAAN,CAAe;IACxCC,OAAO,EAAG,EAD8B;IAExCC,UAAU,EAAC,EAF6B;IAGxCC,WAAW,EAAC;EAH4B,CAAf,CAA7B;EAMA,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCV,KAAK,CAACK,QAAN,CAAe,EAAf,CAAzC;EAEAL,KAAK,CAACW,SAAN,CAAgB,MAAI;IAChBC,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIN,gBAAgB,CAACM,IAAD,CAF9B;EAGH,CAJD,EAIE,EAJF;;EAMA,SAASC,YAAT,GAAuB;IACnB,MAAMC,WAAW,GAAGT,aAAa,CAACO,IAAd,CAAmBG,KAAvC;IACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcL,WAAW,CAACM,MAArC,CAAlB;IACA,MAAMC,GAAG,GAAGP,WAAW,CAACE,SAAD,CAAX,CAAuBK,GAAnC;IACArB,UAAU,CAACsB,QAAQ,KAAK,EACpB,GAAGA,QADiB;MAEpBlB,WAAW,EAAGiB;IAFM,CAAL,CAAT,CAAV;IAKAE,OAAO,CAACC,GAAR,CAAYzB,OAAO,CAACK,WAApB;EACH;;EAED,SAASqB,YAAT,CAAsBC,KAAtB,EAA4B;IACxB,MAAM;MAACC,IAAD;MAAMC;IAAN,IAAeF,KAAK,CAACG,MAA3B;IACA7B,UAAU,CAACsB,QAAQ,KAAK,EACpB,GAAGA,QADiB;MAEpB,CAACK,IAAD,GAAOC;IAFa,CAAL,CAAT,CAAV;EAIH;;EAED,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAO,SAAS,EAAC,aAAjB;QAA+B,IAAI,EAAC,MAApC;QAA2C,WAAW,EAAC,gBAAvD;QAAwE,IAAI,EAAC,SAA7E;QAAuF,KAAK,EAAE7B,OAAO,CAACG,OAAtG;QAA+G,QAAQ,EAAEuB;MAAzH;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,SAAS,EAAC,aAAjB;QAA+B,IAAI,EAAC,MAApC;QAA2C,WAAW,EAAC,mBAAvD;QAA2E,IAAI,EAAC,YAAhF;QAA6F,KAAK,EAAE1B,OAAO,CAACI,UAA5G;QAAwH,QAAQ,EAAEsB;MAAlI;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,SAAS,EAAC,aAAlB;QAAgC,OAAO,EAAEZ,YAAzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAK,GAAG,EAAEd,OAAO,CAACK,WAAlB;QAA+B,SAAS,EAAC;MAAzC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,gBAAd;QAAA,UAAgCL,OAAO,CAACG;MAAxC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAI,SAAS,EAAC,mBAAd;QAAA,UAAmCH,OAAO,CAACI;MAA3C;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GAjDuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}